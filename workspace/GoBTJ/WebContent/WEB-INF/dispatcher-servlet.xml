<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc        
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--
	<bean id="helloController" class="controller.HelloController" />
	<bean id="customExceptionHandler" class="controller.CustomExceptionHandler"/>
	-->
	<!--
	This enables auto scanning feature in Spring.
	Spring will find classes with "@Component", "@Repository", "@Service", "@Controller" annotation, creates bean, and registers to Application Context automatically.
	Spring will start to search the classes in base-package folder and its sub-folder.
	http://www.mkyong.com/spring/spring-auto-scanning-components/
	-->
	<context:component-scan base-package="org.gene.controller, org.gene.exceptionHandler" />
	<mvc:annotation-driven />
	

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	
	<!--
	@ExceptionHandler 어노테이션을 사용하려면 ExceptionHandlerExceptionResolver를 빈으로 등록시켜주어야 한다.
	http://stackoverflow.com/questions/9909806/spring-mvc-exceptionhandler-method-in-controller-never-being-invoked
	-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />
	

</beans>